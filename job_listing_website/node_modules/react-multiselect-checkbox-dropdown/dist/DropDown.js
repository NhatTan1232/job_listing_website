"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _react = require("react");
var _DropDownModule = _interopRequireDefault(require("./DropDown.module.css"));
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e2) { throw _e2; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e3) { didErr = true; err = _e3; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }
function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }
function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
function _iterableToArrayLimit(arr, i) { var _i = null == arr ? null : "undefined" != typeof Symbol && arr[Symbol.iterator] || arr["@@iterator"]; if (null != _i) { var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1; try { if (_x = (_i = _i.call(arr)).next, 0 === i) { if (Object(_i) !== _i) return; _n = !1; } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0); } catch (err) { _d = !0, _e = err; } finally { try { if (!_n && null != _i["return"] && (_r = _i["return"](), Object(_r) !== _r)) return; } finally { if (_d) throw _e; } } return _arr; } }
function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }
var DropDown = function DropDown() {
  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
  var id = arguments.length > 1 ? arguments[1] : undefined;
  var onChangeHandler = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : function (d) {
    return console.log(d);
  };
  var selectAll = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;
  var style = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};
  var dropDownRef = (0, _react.useRef)("");
  var _useState = (0, _react.useState)(false),
    _useState2 = _slicedToArray(_useState, 2),
    isAllSelect = _useState2[0],
    setIsAllSelect = _useState2[1];
  var _useState3 = (0, _react.useState)([]),
    _useState4 = _slicedToArray(_useState3, 2),
    stateOptions = _useState4[0],
    setStateOptions = _useState4[1];
  var _useState5 = (0, _react.useState)(false),
    _useState6 = _slicedToArray(_useState5, 2),
    isDropdownDisplayed = _useState6[0],
    setIsDropdownDisplayed = _useState6[1];
  var _useState7 = (0, _react.useState)({}),
    _useState8 = _slicedToArray(_useState7, 2),
    selectedStates = _useState8[0],
    setSelectedStates = _useState8[1];
  var selectedValues = function selectedValues(obj) {
    var result = [];
    var _iterator = _createForOfIteratorHelper(stateOptions),
      _step;
    try {
      for (_iterator.s(); !(_step = _iterator.n()).done;) {
        var dt = _step.value;
        if (obj[dt.id]) {
          result.push(dt.value);
        }
      }
    } catch (err) {
      _iterator.e(err);
    } finally {
      _iterator.f();
    }
    onChangeHandler(result);
  };
  var isAllSelected = function isAllSelected(obj) {
    var objLen = Object.values(obj).length;
    var filterLen = Object.values(obj).filter(function (d) {
      return d;
    }).length;
    setIsAllSelect(objLen === filterLen);
  };
  var selectAllChangeHandler = function selectAllChangeHandler(e) {
    var obj = stateOptions.reduce(function (obj, state) {
      return _objectSpread(_objectSpread({}, obj), {}, _defineProperty({}, state.id, e.target.checked));
    }, selectedStates);
    setIsAllSelect(e.target.checked);
    selectedValues(obj);
    setSelectedStates(obj);
  };
  var optionChangeHandler = function optionChangeHandler(e) {
    var obj = _objectSpread(_objectSpread({}, selectedStates), {}, _defineProperty({}, e.target.name, e.target.checked));
    selectedValues(obj);
    isAllSelected(obj);
    setSelectedStates(obj);
  };
  var showLabels = function showLabels() {
    try {
      var str = "";
      for (var _i2 = 0, _Object$entries = Object.entries(selectedStates); _i2 < _Object$entries.length; _i2++) {
        var _Object$entries$_i = _slicedToArray(_Object$entries[_i2], 2),
          key = _Object$entries$_i[0],
          value = _Object$entries$_i[1];
        if (value) {
          if (str.length) {
            str += ", ";
          }
          str += stateOptions[key].label;
        }
      }
      str = str.length ? str : "Select";
      return str;
    } catch (err) {
      console.log(err.message);
      console.log(err.stack);
    }
  };
  (0, _react.useEffect)(function () {
    document.addEventListener("click", closePanel, true);
    return function () {
      document.removeEventListener("click", closePanel, true);
    };
  }, []);
  (0, _react.useEffect)(function () {
    var list = options.map(function (d, i) {
      return _objectSpread(_objectSpread({}, d), {}, {
        id: i
      });
    });
    setSelectedStates(list.reduce(function (obj, state) {
      return _objectSpread(_objectSpread({}, obj), {}, _defineProperty({}, state.id, false));
    }, {}));
    setStateOptions(list);
  }, [options]);
  var closePanel = function closePanel(e) {
    if (!dropDownRef.current.contains(e.target)) {
      setIsDropdownDisplayed(false);
    }
  };
  return /*#__PURE__*/React.createElement("div", {
    ref: dropDownRef,
    id: id,
    className: _DropDownModule["default"].stateDropdown,
    style: style === null || style === void 0 ? void 0 : style.stateDropdown
  }, /*#__PURE__*/React.createElement("button", {
    className: _DropDownModule["default"].dropDownBtn,
    onClick: function onClick() {
      return setIsDropdownDisplayed(function (prevState) {
        return !prevState;
      });
    },
    style: style === null || style === void 0 ? void 0 : style.dropDownBtn
  }, /*#__PURE__*/React.createElement("span", {
    className: _DropDownModule["default"].dropDownBtnText,
    style: style === null || style === void 0 ? void 0 : style.dropDownBtnText
  }, showLabels())), isDropdownDisplayed && /*#__PURE__*/React.createElement("div", {
    className: _DropDownModule["default"].dropDownPanel,
    style: style === null || style === void 0 ? void 0 : style.dropDownPanel
  }, stateOptions.length > 0 && selectAll ? /*#__PURE__*/React.createElement("div", {
    className: _DropDownModule["default"].ddOption,
    key: "ddOption"
  }, /*#__PURE__*/React.createElement("input", {
    className: _DropDownModule["default"].ddOptionCheck,
    key: "ddOptionCheck",
    type: "checkbox",
    onChange: selectAllChangeHandler,
    checked: isAllSelect,
    style: style === null || style === void 0 ? void 0 : style.ddOptionCheck
  }), /*#__PURE__*/React.createElement("span", {
    className: _DropDownModule["default"].ddOptionText,
    key: "ddOptionText",
    style: style === null || style === void 0 ? void 0 : style.ddOptionText
  }, "Select All")) : null, stateOptions.length ? stateOptions.map(function (d, i) {
    return /*#__PURE__*/React.createElement("div", {
      className: _DropDownModule["default"].ddOption,
      key: "ddOption".concat(i)
    }, /*#__PURE__*/React.createElement("input", {
      className: _DropDownModule["default"].ddOptionCheck,
      key: "ddOptionCheck".concat(i),
      type: "checkbox",
      name: "".concat(d.id),
      onChange: optionChangeHandler,
      value: d.value || "",
      checked: selectedStates[d.id]
    }), /*#__PURE__*/React.createElement("span", {
      className: "input-text"
    }, d.label));
  }) : /*#__PURE__*/React.createElement("span", {
    className: _DropDownModule["default"].ddOptionText,
    style: style === null || style === void 0 ? void 0 : style.ddOptionText
  }, "No Options")));
};
var _default = DropDown;
exports["default"] = _default;